#include <WiFi.h>
#include <esp_now.h>
#include <ArduinoJson.h>
#include <HTTPClient.h>

const char* ssid = "iThronX";
const char* password = "svs007venkat";
const char* serverUrl = "https://9mh08zhw-8000.inc1.devtunnels.ms/store-sensor-data/";

String receivedMessage = "";

void setup() {
  Serial.begin(9600);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  Serial.print("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }

  Serial.println();
  Serial.println("Connected to WiFi");

  if (esp_now_init() != ESP_OK) {
    Serial.println("Error initializing ESP-NOW");
    return;
  }

  esp_now_register_recv_cb(onDataRecv);
}

void loop() {
  // Check WiFi connectivity
  if (WiFi.status() == WL_CONNECTED) {
    Serial.println("WiFi connection successful");
  } else {
    Serial.println("WiFi connection failed");
  }

  delay(5000);  // Check every 5 seconds
}

void onDataRecv(const esp_now_recv_info *info, const uint8_t *incomingData, int len) {
  char chunk[len + 1];
  memcpy(chunk, incomingData, len);
  chunk[len] = '\0';

  receivedMessage += String(chunk);

  // Deserialize JSON data
  StaticJsonDocument<300> jsonDoc;
  DeserializationError error = deserializeJson(jsonDoc, receivedMessage);

  if (error) {
    Serial.print("deserializeJson() failed: ");
    Serial.println(error.c_str());
    return;
  }

  // Print data received status
  Serial.println("Data received");

  // Send data to server
  sendDataToServer(receivedMessage);

  // Clear received message buffer
  receivedMessage = "";
}

void sendDataToServer(String data) {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    http.begin(serverUrl);
    http.addHeader("Content-Type", "application/json");

    int httpResponseCode = http.POST(data);

    if (httpResponseCode > 0) {
      Serial.println("Data forwarded to server");
    } else {
      Serial.print("Error forwarding data to server: ");
      Serial.println(httpResponseCode);
    }

    http.end();
  } else {
    Serial.println("WiFi not connected");
  }
}
